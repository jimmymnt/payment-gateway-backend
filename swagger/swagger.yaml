openapi: 3.0.0
info:
  description: "Oauth 2.0 Authorization Server"
  version: "1.0.0"
  title: "Authorization Server"
  termsOfService: "https://swagger.io/terms/"
  contact:
    email: "jimmy.vn.contractor@gmail.com"
  license:
    name: "Apache 2.0"
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: "https://oauth.gotcloud.app"
    description: PROD Environment
  - url: "http://localhost:3000"
    description: Local Environment
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
paths:
  /api/v1/ping:
    get:
      tags:
        - Ping
      description: Returns API operational status
      responses:
        '200':
          description: OK
  /api/v1/users:
    post:
      tags:
        - User Authenticate
      description: Create user to log into the system.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  description: User's name
                email:
                  type: string
                  pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
                  description: User's Email
                password:
                  type: string
                  description: User's Password
                phone:
                  type: string
                  pattern: '^(0\d{9,10})$'
                  description: User's phone
      responses:
        '201':
          description: User created
        '400':
          description: Bad request, missing body content
        '503':
          description: Error service unavailable
  /api/v1/login:
    post:
      tags:
        - User Authenticate
      description: Login to the system
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  description: User's email
                password:
                  type: string
                  description: User's Password
      responses:
        200:
          description: Logged in successfully
        400:
          description: Bad request
        500:
          description: Email or Password incorrect
  /api/v1/token/refresh:
    post:
      tags:
        - User Authenticate
      description: Refresh user token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  description: User's refresh token
      responses:
        200:
          description: Refresh Token successfully
        403:
          description: Forbidden
        400:
          description: Bad request
        500:
          description: Server Internal Error
  /api/v1/logout:
    post:
      tags:
        - User Authenticate
      description: Logout
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Logged out successfully
        '403':
          description: Access denied. Seem like you haven't provided Authorization token, yet.
  /oauth/authorize:
    get:
      tags:
        - OAuth Flows
      description: Authorize client
      parameters:
        - name: client_id
          in: query
          description: ID of the client
          required: true
          schema:
            type: string
        - name: response_type
          in: query
          description: Response type of authorization, types are supported [code]
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Authorized
        '404':
          description: Client not found in the system
        '400':
          description: Bad Request, missing params
  /oauth/token:
    post:
      tags:
        - OAuth Flows
      description: Get Token and related information.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - client_id
                - client_secret
                - grant_type
                - code
                - redirect_uri
              properties:
                client_id:
                  type: string
                  description: Client ID
                client_secret:
                  type: string
                  description: Client secret
                grant_type:
                  type: string
                  description: Grant Type
                code:
                  type: string
                  description: Authorization Code
                redirect_uri:
                  type: string
                  description: Client Redirect URL (Callback URL)
      responses:
        '200':
          description: Successfully
        '404':
          description: Client not found in the system
        '400':
          description: Bad Request, missing body content
        '503':
          description: Error Service Unavailable
  /oauth/token/refresh:
    post:
      tags:
        - OAuth Flows
      description: Refresh Token.
      security:
        - basicAuth: [ ]
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - grant_type
                - refresh_token
              properties:
                grant_type:
                  type: string
                  description: Grant Type [refresh_token]
                refresh_token:
                  type: string
                  description: Refresh Token value
      responses:
        '200':
          description: Successfully
        '404':
          description: Client not found in the system
        '400':
          description: Bad Request, missing Basic Auth or body content
        '503':
          description: Error Service Unavailable
  /api/v1/protected-test:
    get:
      tags:
        - Retrieve data after authentication
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Authorized
        '404':
          description: Client not found in the system
        '400':
          description: Bad Request, missing Basic Auth or body content
        '503':
          description: Error Service Unavailable